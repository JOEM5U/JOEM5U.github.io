*{
    box-sizing: border-box;
    margin: 0;

}


/*Grid layout was used to make the layout process of the website easier*/
#grid-container-bg{
    height: 100vh;
    margin: 0 auto;
    display: grid;
    background-image: linear-gradient(rgb(250, 250, 250) , rgb(255, 108, 108));
    grid-template-columns: 0.5fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 0.5fr;
    grid-template-rows: 0.25fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
}

/*These boxes here are for the ovens appearance*/
#box-one{
    grid-row: 2/12;
    grid-column: 1/11;
    margin-top: 20px;
    background-color: rgb(77, 77, 77);   
}
#box-two{
    grid-column: 2/10;
    grid-row: 4/12;
    background-color: rgb(44, 44, 44);
    margin-bottom: 30px;
}

#box-three{  
    grid-column: 2/10;
    grid-row: 11;
    height: 20px;
    background-color: rgb(236, 236, 236);
}
/*Here I had some trouble. I tried to have the animation state be the same when finished.
I tried to achieve this through the animation-fill-mode: fowards but did not end up working.
I think the problem lies with having multiple aniamtions on the one div. 
I did this as I wanted to have the animation toggable through js ratrher that having multiple of the same divs.
*/
#box-four{
    grid-column: 5/7;
    display: flex;
    position: relative;
    align-self: center;
    grid-row: 10;
    width: 300px;
    height: 200px;
    margin: auto;
    background: #dbbfad;
    border-radius: 40px 40px 0 0;
    animation: undercookBread 10s forwards;
    animation-play-state: paused;
    animation: chefsKiss 30s forwards;
    animation-play-state: paused;
    animation:  burntBread 40s forwards;
    animation-play-state: paused;


}


#temperature{
    grid-row: 1;
    grid-column:3;
    aspect-ratio : 1 / 1; 
    /* Aspect ratio is used here because the circle kept turning into an oval due to the uneven grid size.*/
    border-radius: 50%;
    background: radial-gradient(rgb(109, 119, 131), #404142);
    position: relative;
    display: flex;
    min-width: 0;
}

#time{
    grid-row: 1;
    grid-column:8;
    aspect-ratio : 1 / 1; 
    border-radius: 50%;
    background: radial-gradient(rgb(109, 119, 131), #404142);
    position: relative;
    display: flex;
    min-width: 0;
}

.material-icons{
    display: flex;
    border: none;
    background: none;
    font-size: 70%;
    padding: 5px;
}

.material-icons:hover{
font-weight: bolder;
cursor: pointer;
}
/*I decided to apply the css to the buttons separatrly as I felt that it was eaier to move them aound to theri respective places.*/
#button1{
    position: relative;
    top: 0;
    right: 15%;
    overflow: hidden;
}
/*I decided to use overflow because I had problems with the buttons moving to various screen sizes. The overflow: hidden is more like a temporary solution, I think using min width and such would have worked out better.*/
#button3{
    position: relative;
    left: 20%;
    top:55%;
    overflow: hidden;
}

#button5{
    position: relative;
    top: 0;
    left: 55%;
    overflow: hidden;
}

#button2{
    position: relative;
    top: 0;
    right: 15%;
    overflow: hidden; 
}

#button4{
    position: relative;
    left: 20%;
    top:55%;
    overflow: hidden;
}

#button6{
    position: relative;
    top: 0;
    left: 55%;
    overflow: hidden;
}

/*This is for the heat when displaying. I made the insides transparent to only have the sides visible. */
#box-seven{
    grid-column: 2/10;
    grid-row: 4/12;
    display: none;
    background-image: linear-gradient(
        to right,
        #f5a73a, 
        #fffdc200 15%,
        #d7f0a200 15%,
        #d7f0a200 85%,
        #f5a73a
    );
    margin-bottom: 30px;
}


#box-eight{
    grid-column: 2/10;
    grid-row: 4/12;
    background: radial-gradient(rgba(63, 64, 65, 0.219), #0000005b);
    margin-bottom: 30px;
    z-index: 5;
}

/*Here are the animation keyframes for the bread that would be cooked. I used various colur tranitions to depict the various staes of the bread.
I decided to keep it simple to make it visually obvious whether if the bread was cooked fine  or was being burnt.*/

@keyframes undercookBread{
    0%{
        width: 300px;
        height: 200px;
    }
    100%{
        width: 400px;
        height: 300px;
    }
}

@keyframes chefsKiss{
    0% {width: 300px; height: 200px; }
    100%{
        width: 500px;
        height: 400px;
        background-color: #ceab95;
    }
}

@keyframes burntBread{
    0% {width: 300px; height: 180px; }
    100%{
        width: 480px;
        height: 380px;
        background-color: #2e2824;
    }
}